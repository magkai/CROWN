{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport QuestionForm from './QuestionForm';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: \"this is a test question\",\n      answers: []\n    };\n\n    this.handleSubmit = question => {\n      this.setState({\n        questions: [...this.state.questions, question]\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"in mount\");\n    return window.fetch('\"http://127.0.0.1:5000/getanswer', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify({\n        \"questions\": this.state.questions\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log(\"error case:\", response);\n        throw new Error('Something went wrong ...');\n      }\n    }).then(data => this.setState({\n      answers: data.answers\n    })).catch(error => this.setState({\n      error\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          answers = _this$state.answers;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      questions: questions,\n      answers: answers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst TableBody = props => {\n  const rows = props.answers.map((answer, index) => {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, props.questions[0]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, answer));\n  });\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Question\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Answer\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, rows));\n};\n\nexport default App;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js"],"names":["React","Component","Table","Form","QuestionForm","App","state","questions","answers","handleSubmit","question","setState","componentDidMount","console","log","window","fetch","headers","method","body","JSON","stringify","then","response","ok","json","Error","data","catch","error","render","TableBody","props","rows","map","answer","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport QuestionForm from './QuestionForm'\n\n\n\n\nclass App extends Component {\n  state = {\n    questions:  \"this is a test question\"\n      ,\n      answers: []\n  \n    };\n    \n  \n    handleSubmit = question => {\n    this.setState({ questions: [...this.state.questions, question] });\n    }\n\ncomponentDidMount() {\n    console.log(\"in mount\");\n    return window.fetch('\"http://127.0.0.1:5000/getanswer', {\n         headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json' },\n    method: 'post', body: JSON.stringify({\"questions\" : this.state.questions })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n            console.log(\"error case:\", response);\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => this.setState({ answers: data.answers }))\n      .catch(error => this.setState({ error }));\n  }\n\n\n render() {\n     const {questions, answers } = this.state;\n      return (\n        <div className=\"container\">\n        <Form handleSubmit={this.handleSubmit} /> \n         <TableBody  questions={questions} answers={answers}/>\n \n        </div>\n      );\n  }\n  \n};\n\n  \nconst TableBody = props  => {\n     const rows = props.answers.map((answer, index) => {\n         return(\n         <tr key={index}>\n                    <td>{props.questions[0]}</td>\n                    <td>{answer}</td>\n                </tr>\n                );\n     });\n     \n    \n     return (\n \n             <table>\n                <thead>\n                    <tr>\n                        <th>Question</th>\n                        <th>Answer</th>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n            );\n    \n  };\n  \n  \nexport default App\n"]},"metadata":{},"sourceType":"module"}