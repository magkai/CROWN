{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport Options from './Options';\nimport './index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionChange = (optionId, value) => {\n      this.setState({\n        [optionId]: value\n      });\n    };\n\n    this.validateState = () => {\n      console.log(\"state in validateState: \" + this.state.edgeThreshold);\n      var errMessage = \"\";\n\n      if (this.state.retNbr < 1 || this.state.retNbr > 20) {\n        errMessage = errMessage + \" The number of returned results must lie between 1 and 20!\";\n      }\n\n      if (this.state.indriRetNbr < 10 || this.state.indriRetNbr > 1000) {\n        errMessage = errMessage + \" The number of returned Indri passages must lie between 10 and 1000!\";\n      }\n\n      if (this.state.nodeThreshold < 0.5 || this.state.nodeThreshold > 1.0) {\n        errMessage = errMessage + \" The node threshold must lie between 0.5 and 1.0!\";\n      }\n\n      if (this.state.edgeThreshold < 0 || this.state.edgeThreshold > 0.1) {\n        errMessage = errMessage + \" The edge threshold must lie between 0.0 and 0.1!\";\n      }\n\n      var score = parseFloat(this.state.h1) + parseFloat(this.state.h2) + parseFloat(this.state.h3);\n      console.log(\"score: \" + score);\n      var scoreVariance = 0.0001;\n      var diff = Math.abs(1.0 - score);\n      console.log(\"diff: \" + diff);\n\n      if (Math.abs(1.0 - score) > scoreVariance) {\n        errMessage = errMessage + \" The hyperparameters must sum up to 1.0!\";\n      }\n\n      this.setState({\n        err: errMessage\n      });\n      return errMessage;\n    };\n\n    this.handleSubmit = question => {\n      this.setState({\n        err: \"\"\n      });\n      this.setState({\n        api_err: \"\"\n      });\n      var errMessage = this.validateState();\n\n      if (errMessage !== \"\") {\n        console.log(\"Abort because of wrong parameters\");\n        return;\n      } //this.setState({ questions: [...this.state.questions,question] }, () => {\n\n\n      if (question !== null && question !== \"\") {\n        fetch(\"http://139.19.6.31:5000/getanswer\", {\n          //fetch(\"http://139.19.51.11:5000/getanswer\", {\n          // fetch(\"http://localhost:5000/getanswer\", {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            credentials: 'same-origin'\n          },\n          method: 'post',\n          body: JSON.stringify({\n            \"questions\": [...this.state.questions, question],\n            \"retNbr\": this.state.retNbr,\n            \"indriRetNbr\": this.state.indriRetNbr,\n            \"nodeThreshold\": this.state.nodeThreshold,\n            \"edgeThreshold\": this.state.edgeThreshold,\n            \"convquery\": this.state.convquery,\n            \"h1\": this.state.h1,\n            \"h2\": this.state.h2,\n            \"h3\": this.state.h3\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            console.log(\"ERROR when calling REST Api, response was:\" + response); //throw new Error('ERROR when calling REST Api');\n            //   this.setState({ answers:  [...this.state.answers,\"ERROR while calling REST API\"] }, () => {\n            //  this.setState({turn: this.state.turn+1});\n            //  })\n          }\n        }).then(data => this.setState({\n          questions: [...this.state.questions, question],\n          answers: [...this.state.answers, data],\n          turn: this.state.turn + 1 //, () => { this.setState({turn: this.state.turn+1});\n\n        })).catch(error => this.setState({\n          api_err: error\n        }, () => {\n          console.log(\"ERROR when calling REST Api: \" + error); //this.setState({ answers:  [...this.state.answers,[\"ERROR while calling REST API\"]] }, () => {\n          //this.setState({turn: this.state.turn+1});\n          //})\n        }));\n      } // });\n\n    };\n\n    this.handleClearConv = () => {\n      //this.setState(this.initialState)\n      this.setState({\n        questions: [],\n        answers: [],\n        turn: -1\n      });\n    };\n\n    this.initialState = {\n      questions: [],\n      answers: [],\n      turn: -1,\n      retNbr: 3,\n      indriRetNbr: 100,\n      nodeThreshold: 0.75,\n      edgeThreshold: 0.0,\n      convquery: \"conv_uw\",\n      h1: 0.6,\n      h2: 0.3,\n      h3: 0.1,\n      err: \"\",\n      api_err: \"\"\n    };\n    this.state = this.initialState;\n  } // state = {\n  //   questions:  [],\n  //   answers: [],\n  //turn: -1\n  //};\n  // prev_questions = []\n  //prev_answers = []\n  // prev_turn = -1\n\n\n  render() {\n    //#191970\n    var errorStyle = {\n      color: \"#FF0000\"\n    };\n    return React.createElement(\"div\", {\n      className: \"full-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      align: \"center\",\n      font: \"#FF0000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"CROWN: Conversational Passage Ranking By Reasoning Over Word Networks\"), React.createElement(\"div\", {\n      className: \"flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.err && React.createElement(\"div\", {\n      className: \"error-message\",\n      style: errorStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \", this.state.err), this.state.api_err && React.createElement(\"div\", {\n      className: \"error-message\",\n      style: errorStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" \", \"500 Internal Server Error\"), React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      onSubmit: this.handleSubmit,\n      handleClearConv: this.handleClearConv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      questions: this.state.questions,\n      answers: this.state.answers,\n      turn: this.state.turn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"flex-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"small-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Options, {\n      onChange: this.handleOptionChange,\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst TableBody = props => {\n  const questions = props.questions,\n        answers = props.answers,\n        turn = props.turn;\n  console.log(\"in tablebody, questions: \" + questions);\n  console.log(\"in tablebody, answers: \" + answers);\n  console.log(\"in tablebody, turn: \" + turn);\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, [...questions].reverse().map((question, index) => {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(InnerTable, {\n      question: question,\n      answers: [...answers].reverse()[index],\n      nbr: index,\n      turn: turn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })));\n  })));\n};\n\nconst InnerTable = props => {\n  const question = props.question,\n        answers = props.answers,\n        nbr = props.nbr,\n        turn = props.turn;\n  const rows = answers.map((answer, index) => {\n    return React.createElement(\"tr\", {\n      key: \"\".concat(nbr.toString()).concat(\"_\").concat(index.toString()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Rank \", index + 1, \" : \"), answer));\n  });\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Results for Turn \", turn + 1, \": \", question))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, rows));\n};\n\nexport default App;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js"],"names":["React","Component","Form","Options","App","constructor","props","handleOptionChange","optionId","value","setState","validateState","console","log","state","edgeThreshold","errMessage","retNbr","indriRetNbr","nodeThreshold","score","parseFloat","h1","h2","h3","scoreVariance","diff","Math","abs","err","handleSubmit","question","api_err","fetch","headers","credentials","method","body","JSON","stringify","questions","convquery","then","response","ok","json","data","answers","turn","catch","error","handleClearConv","initialState","render","errorStyle","color","TableBody","reverse","map","index","InnerTable","nbr","rows","answer","concat","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,aAAP;;AAMA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAgChBC,kBAhCgB,GAgCK,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACtC,WAAKC,QAAL,CAAc;AAAE,SAACF,QAAD,GAAYC;AAAd,OAAd;AACH,KAlCe;;AAAA,SAoChBE,aApCgB,GAoCA,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6B,KAAKC,KAAL,CAAWC,aAApD;AACA,UAAIC,UAAU,GAAG,EAAjB;;AACA,UAAG,KAAKF,KAAL,CAAWG,MAAX,GAAoB,CAApB,IAAyB,KAAKH,KAAL,CAAWG,MAAX,GAAoB,EAAhD,EAAoD;AACjDD,QAAAA,UAAU,GAAGA,UAAU,GAAE,4DAAzB;AACF;;AACD,UAAG,KAAKF,KAAL,CAAWI,WAAX,GAAyB,EAAzB,IAA+B,KAAKJ,KAAL,CAAWI,WAAX,GAAyB,IAA3D,EAAiE;AAC7DF,QAAAA,UAAU,GAAGA,UAAU,GAAE,sEAAzB;AACH;;AACD,UAAG,KAAKF,KAAL,CAAWK,aAAX,GAA2B,GAA3B,IAAkC,KAAKL,KAAL,CAAWK,aAAX,GAA2B,GAAhE,EAAqE;AACjEH,QAAAA,UAAU,GAAGA,UAAU,GAAE,mDAAzB;AACH;;AACD,UAAG,KAAKF,KAAL,CAAWC,aAAX,GAA2B,CAA3B,IAAgC,KAAKD,KAAL,CAAWC,aAAX,GAA2B,GAA9D,EAAmE;AAC/DC,QAAAA,UAAU,GAAGA,UAAU,GAAE,mDAAzB;AACH;;AAED,UAAII,KAAK,GAAGC,UAAU,CAAC,KAAKP,KAAL,CAAWQ,EAAZ,CAAV,GAA4BD,UAAU,CAAC,KAAKP,KAAL,CAAWS,EAAZ,CAAtC,GAAwDF,UAAU,CAAC,KAAKP,KAAL,CAAWU,EAAZ,CAA9E;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYO,KAAxB;AACA,UAAIK,aAAa,GAAG,MAApB;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAS,MAAMR,KAAf,CAAX;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWa,IAAvB;;AACA,UAAGC,IAAI,CAACC,GAAL,CAAS,MAAMR,KAAf,IAAwBK,aAA3B,EAA2C;AACvCT,QAAAA,UAAU,GAAGA,UAAU,GAAE,0CAAzB;AACH;;AAGD,WAAKN,QAAL,CAAc;AAACmB,QAAAA,GAAG,EAAEb;AAAN,OAAd;AACA,aAAOA,UAAP;AACH,KAhEe;;AAAA,SAmEhBc,YAnEgB,GAmEDC,QAAQ,IAAI;AACvB,WAAKrB,QAAL,CAAc;AAACmB,QAAAA,GAAG,EAAE;AAAN,OAAd;AACA,WAAKnB,QAAL,CAAc;AAACsB,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,UAAIhB,UAAU,GAAG,KAAKL,aAAL,EAAjB;;AACA,UAAGK,UAAU,KAAK,EAAlB,EAAsB;AAClBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA;AACH,OAPsB,CASvB;;;AACA,UAAIkB,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,EAAtC,EAA0C;AACtCE,QAAAA,KAAK,CAAC,mCAAD,EAAsC;AAC3C;AACF;AACOC,UAAAA,OAAO,EAAE;AACd,sBAAU,kBADI;AAEd,4BAAgB,kBAFF;AAEsBC,YAAAA,WAAW,EAAE;AAFnC,WAH6B;AAO3CC,UAAAA,MAAM,EAAE,MAPmC;AAO3BC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAc,CAAC,GAAG,KAAKzB,KAAL,CAAW0B,SAAf,EAAyBT,QAAzB,CAAf;AACG,sBAAU,KAAKjB,KAAL,CAAWG,MADxB;AACgC,2BAAe,KAAKH,KAAL,CAAWI,WAD1D;AAEA,6BAAiB,KAAKJ,KAAL,CAAWK,aAF5B;AAE2C,6BAAiB,KAAKL,KAAL,CAAWC,aAFvE;AAGH,yBAAa,KAAKD,KAAL,CAAW2B,SAHrB;AAGgC,kBAAM,KAAK3B,KAAL,CAAWQ,EAHjD;AAID,kBAAM,KAAKR,KAAL,CAAWS,EAJhB;AAIoB,kBAAM,KAAKT,KAAL,CAAWU;AAJrC,WAAf;AAPqB,SAAtC,CAAL,CAYKkB,IAZL,CAYUC,QAAQ,IAAI;AAClB,cAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,WAFD,MAEO;AACHjC,YAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+C8B,QAA3D,EADG,CAEL;AACH;AACG;AAEA;AACD;AACF,SAvBH,EAwBGD,IAxBH,CAwBQI,IAAI,IAAG,KAAKpC,QAAL,CAAc;AAAC8B,UAAAA,SAAS,EAAE,CAAC,GAAG,KAAK1B,KAAL,CAAW0B,SAAf,EAA0BT,QAA1B,CAAZ;AACtBgB,UAAAA,OAAO,EAAG,CAAC,GAAG,KAAKjC,KAAL,CAAWiC,OAAf,EAAuBD,IAAvB,CADY;AACkBE,UAAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWkC,IAAX,GAAgB,CADxC,CAE1B;;AAF0B,SAAd,CAxBf,EA6BGC,KA7BH,CA6BSC,KAAK,IAAI,KAAKxC,QAAL,CAAc;AAACsB,UAAAA,OAAO,EAAEkB;AAAV,SAAd,EAAiC,MAAM;AACnDtC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCqC,KAA9C,EADmD,CAEnD;AACE;AAEA;AACL,SANe,CA7BlB;AAoCD,OA/CoB,CAiDxB;;AAEF,KAtHe;;AAAA,SAyHhBC,eAzHgB,GAyHE,MAAM;AACpB;AACA,WAAKzC,QAAL,CAAc;AAAC8B,QAAAA,SAAS,EAAG,EAAb;AAAgBO,QAAAA,OAAO,EAAE,EAAzB;AAA6BC,QAAAA,IAAI,EAAE,CAAC;AAApC,OAAd;AAEH,KA7He;;AAGhB,SAAKI,YAAL,GAAoB;AAChBZ,MAAAA,SAAS,EAAG,EADI;AAEhBO,MAAAA,OAAO,EAAE,EAFO;AAGhBC,MAAAA,IAAI,EAAE,CAAC,CAHS;AAIhB/B,MAAAA,MAAM,EAAE,CAJQ;AAKhBC,MAAAA,WAAW,EAAE,GALG;AAMhBC,MAAAA,aAAa,EAAE,IANC;AAOhBJ,MAAAA,aAAa,EAAE,GAPC;AAQhB0B,MAAAA,SAAS,EAAE,SARK;AAShBnB,MAAAA,EAAE,EAAE,GATY;AAUhBC,MAAAA,EAAE,EAAE,GAVY;AAWhBC,MAAAA,EAAE,EAAE,GAXY;AAYhBK,MAAAA,GAAG,EAAE,EAZW;AAahBG,MAAAA,OAAO,EAAE;AAbO,KAApB;AAiBA,SAAKlB,KAAL,GAAa,KAAKsC,YAAlB;AACD,GAvByB,CAwBzB;AACE;AACE;AACG;AACF;AAEJ;AACC;AACD;;;AAmGAC,EAAAA,MAAM,GAAG;AACP;AACE,QAAIC,UAAU,GACN;AAACC,MAAAA,KAAK,EAAC;AAAP,KADR;AAGA,WACU;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAI,MAAA,KAAK,EAAC,QAAV;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EADC,EAEF;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzC,KAAL,CAAWe,GAAX,IAAkB;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAEyB,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmD,GAAnD,EAAwD,KAAKxC,KAAL,CAAWe,GAAnE,CADrB,EAEG,KAAKf,KAAL,CAAWkB,OAAX,IAAsB;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAEsB,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmD,GAAnD,EAAwD,2BAAxD,CAFzB,EAGE,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAKxB,YAAzB;AAAuC,MAAA,QAAQ,EAAE,KAAKA,YAAtD;AAAoE,MAAA,eAAe,EAAE,KAAKqB,eAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKrC,KAAL,CAAW0B,SAAjC;AAA4C,MAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWiC,OAAhE;AAAyE,MAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWkC,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAHJ,EAYE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKzC,kBAAxB;AAA4C,MAAA,KAAK,EAAE,KAAKO,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFH,CAZF,CAFE,CADV;AA2BH;;AAnKuB;;AA0K5B,MAAM0C,SAAS,GAAGlD,KAAK,IAAK;AAAA,QAElBkC,SAFkB,GAEUlC,KAFV,CAElBkC,SAFkB;AAAA,QAEPO,OAFO,GAEUzC,KAFV,CAEPyC,OAFO;AAAA,QAEEC,IAFF,GAEU1C,KAFV,CAEE0C,IAFF;AAIzBpC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8B2B,SAA1C;AACA5B,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BkC,OAAxC;AACCnC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBmC,IAArC;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC,GAAGR,SAAJ,EAAeiB,OAAf,GAAyBC,GAAzB,CAA6B,CAAC3B,QAAD,EAAW4B,KAAX,KAAqB;AAC/C,WACG;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE5B,QAAtB;AAAgC,MAAA,OAAO,EAAE,CAAC,GAAGgB,OAAJ,EAAaU,OAAb,GAAuBE,KAAvB,CAAzC;AAAwE,MAAA,GAAG,EAAEA,KAA7E;AAAoF,MAAA,IAAI,EAAEX,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADH;AAOE,GARL,CADF,CADJ,CADJ;AAkBH,CA3BD;;AA8BA,MAAMY,UAAU,GAAGtD,KAAK,IAAI;AAAA,QAEjByB,QAFiB,GAEezB,KAFf,CAEjByB,QAFiB;AAAA,QAEPgB,OAFO,GAEezC,KAFf,CAEPyC,OAFO;AAAA,QAEEc,GAFF,GAEevD,KAFf,CAEEuD,GAFF;AAAA,QAEOb,IAFP,GAEe1C,KAFf,CAEO0C,IAFP;AAIxB,QAAMc,IAAI,GAAGf,OAAO,CAACW,GAAR,CAAY,CAACK,MAAD,EAASJ,KAAT,KAAmB;AACxC,WACI;AAAI,MAAA,GAAG,EAAE,GAAGK,MAAH,CAAUH,GAAG,CAACI,QAAJ,EAAV,EAA0BD,MAA1B,CAAiC,GAAjC,EAAsCA,MAAtC,CAA6CL,KAAK,CAACM,QAAN,EAA7C,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASN,KAAK,GAAC,CAAf,QAAJ,EAA6BI,MAA7B,CADJ,CADJ;AAOH,GARY,CAAb;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAI,IAAA,GAAG,EAAEhC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBiB,IAAI,GAAC,CAA3B,QAAgCjB,QAAhC,CADJ,CADL,CADH,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ+B,IAAR,CANH,CADJ;AAWH,CAzBD;;AA0BA,eAAe1D,GAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport Form from './Form'\nimport Options from './Options'\nimport './index.css'\n \n\n\n\n\nclass App extends Component {\n  \n constructor(props) {\n    super(props);\n\n    this.initialState = {\n        questions:  [],\n        answers: [],\n        turn: -1,\n        retNbr: 3,\n        indriRetNbr: 100,\n        nodeThreshold: 0.75,\n        edgeThreshold: 0.0,\n        convquery: \"conv_uw\",\n        h1: 0.6,\n        h2: 0.3,\n        h3: 0.1,\n        err: \"\",\n        api_err: \"\"\n                \n    };\n\n    this.state = this.initialState;\n  }\n   // state = {\n     //   questions:  [],\n       //   answers: [],\n          //turn: -1\n        //};\n        \n    // prev_questions = []\n     //prev_answers = []\n    // prev_turn = -1\n        \n    handleOptionChange = (optionId, value) => {\n        this.setState({ [optionId]: value });\n    }\n    \n    validateState = () => {\n        console.log(\"state in validateState: \" + this.state.edgeThreshold)\n        var errMessage = \"\";\n        if(this.state.retNbr < 1 || this.state.retNbr > 20) {\n           errMessage = errMessage +\" The number of returned results must lie between 1 and 20!\";\n        }\n        if(this.state.indriRetNbr < 10 || this.state.indriRetNbr > 1000) {\n            errMessage = errMessage +\" The number of returned Indri passages must lie between 10 and 1000!\";\n        }\n        if(this.state.nodeThreshold < 0.5 || this.state.nodeThreshold > 1.0) {\n            errMessage = errMessage +\" The node threshold must lie between 0.5 and 1.0!\";\n        }\n        if(this.state.edgeThreshold < 0 || this.state.edgeThreshold > 0.1) {\n            errMessage = errMessage +\" The edge threshold must lie between 0.0 and 0.1!\";\n        }\n        \n        var score = parseFloat(this.state.h1) + parseFloat(this.state.h2) + parseFloat(this.state.h3)\n        console.log(\"score: \" + score)\n        var scoreVariance = 0.0001\n        var diff = Math.abs(1.0 - score)\n        console.log(\"diff: \" + diff)\n        if(Math.abs(1.0 - score) > scoreVariance ) {\n            errMessage = errMessage +\" The hyperparameters must sum up to 1.0!\";\n        }\n       \n        \n        this.setState({err: errMessage});\n        return errMessage;\n    }\n\n    \n    handleSubmit = question => { \n        this.setState({err: \"\"});\n        this.setState({api_err: \"\"});\n        var errMessage = this.validateState();\n        if(errMessage !== \"\") {  \n            console.log(\"Abort because of wrong parameters\")\n            return;\n        }\n     \n        //this.setState({ questions: [...this.state.questions,question] }, () => {\n        if (question !== null && question !== \"\") {\n            fetch(\"http://139.19.6.31:5000/getanswer\", {\n            //fetch(\"http://139.19.51.11:5000/getanswer\", {\n          // fetch(\"http://localhost:5000/getanswer\", {\n                 headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json', credentials: 'same-origin'},\n\n            method: 'post', body: JSON.stringify({\"questions\" : [...this.state.questions,question], \n                                                    \"retNbr\": this.state.retNbr, \"indriRetNbr\": this.state.indriRetNbr, \n                                                 \"nodeThreshold\": this.state.nodeThreshold, \"edgeThreshold\": this.state.edgeThreshold,\n                                              \"convquery\": this.state.convquery, \"h1\": this.state.h1,\n                                                \"h2\": this.state.h2, \"h3\": this.state.h3})\n              }).then(response => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                    console.log(\"ERROR when calling REST Api, response was:\" + response);\n                  //throw new Error('ERROR when calling REST Api');\n               //   this.setState({ answers:  [...this.state.answers,\"ERROR while calling REST API\"] }, () => {\n                  //  this.setState({turn: this.state.turn+1});\n                  \n                  //  })\n                }\n              })\n              .then(data =>this.setState({questions: [...this.state.questions, question],\n                   answers:  [...this.state.answers,data], turn: this.state.turn+1 }\n               //, () => { this.setState({turn: this.state.turn+1});\n                  \n              ))\n              .catch(error => this.setState({api_err: error }, () => {\n                  console.log(\"ERROR when calling REST Api: \" + error);\n                  //this.setState({ answers:  [...this.state.answers,[\"ERROR while calling REST API\"]] }, () => {\n                    //this.setState({turn: this.state.turn+1});\n                  \n                    //})\n              }));\n          }\n\n       // });\n    \n    }\n \n    \n    handleClearConv = () => {\n        //this.setState(this.initialState)\n        this.setState({questions:  [],answers: [], turn: -1})\n        \n    }\n\n\n\n    render() {\n      //#191970\n        var errorStyle = \n                {color:\"#FF0000\"}\n        \n        return (\n                  <div className=\"full-container\">\n                 <h3 align=\"center\" font=\"#FF0000\">CROWN: Conversational Passage Ranking By Reasoning Over Word Networks</h3>\n                <div className=\"flex-row\">\n                \n           \n                    <div className=\"flex-small\">\n                      <div className=\"container\">\n                        {this.state.err && <div className=\"error-message\" style={errorStyle}>{\" \"}{this.state.err}</div>}\n                        {this.state.api_err && <div className=\"error-message\" style={errorStyle}>{\" \"}{\"500 Internal Server Error\"}</div>}\n                        <Form handleSubmit={this.handleSubmit} onSubmit={this.handleSubmit} handleClearConv={this.handleClearConv} />      \n                        <TableBody questions={this.state.questions} answers={this.state.answers} turn={this.state.turn}/>\n                    </div>\n                    </div>\n                 \n                  <div className=\"flex-small\">\n                   \n                     <div className=\"small-container\">\n                        <Options onChange={this.handleOptionChange} value={this.state}/>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            \n        \n          ); \n     \n    };\n    \n    // <div className=\"small-container\">  <div className=\"flex-small\">\n}\n\n\n  \nconst TableBody = props  => {\n    \n   const {questions, answers, turn} = props;\n  \n   console.log(\"in tablebody, questions: \" + questions)\n   console.log(\"in tablebody, answers: \" + answers)\n    console.log(\"in tablebody, turn: \" + turn)\n       \n   \n    return (\n        <table> \n            <tbody>\n             {[...questions].reverse().map((question, index) => {\n                 return (\n                    <tr key={index}>\n                        <td>\n                        <InnerTable question={question} answers={[...answers].reverse()[index]} nbr={index} turn={turn}/>\n                        </td>\n                    </tr>\n                     \n                 )})\n            }\n            </tbody>\n        </table>\n    );\n  \n   \n}; \n\n\nconst InnerTable = props => {\n    \n    const {question, answers, nbr, turn} = props\n\n    const rows = answers.map((answer, index) => {\n        return(\n            <tr key={\"\".concat(nbr.toString()).concat(\"_\").concat(index.toString())}>\n                <td><b>Rank {index+1} : </b>{answer}</td>\n            </tr>\n          \n            \n         );\n    });\n\n    return (\n        <table>\n           <thead>\n                <tr key={question}>\n                    <th>Results for Turn {turn+1}: {question}</th>\n                </tr>\n           </thead>\n           <tbody>{rows}</tbody>\n        </table>\n    )\n       \n};\nexport default App\n"]},"metadata":{},"sourceType":"module"}