{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Options.js\";\nimport React, { Component } from 'react';\n\nclass Options extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.props.onChange(name, value);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          retNbr = _this$props.retNbr,\n          indriRetNbr = _this$props.indriRetNbr,\n          nodeThreshold = _this$props.nodeThreshold,\n          edgeThreshold = _this$props.edgeThreshold,\n          h1 = _this$props.h1,\n          h2 = _this$props.h2,\n          h3 = _this$props.h3; //<label display=\"inline\" htmlFor=\"retnbr\">Number of Results (1, ..., 20): </label>\n\n    var inlinestyle = {\n      display: \"inline\",\n      width: \"10%\",\n      \"margin-right\": \"10px\"\n    };\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 'options',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Advanced Options\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 'retnbr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Number of Results (1, ..., 20): \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"retNbr\",\n      placeholder: \"3\",\n      value: retNbr,\n      label: \"Number of Results (1, ..., 20):\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"  \")), React.createElement(\"tr\", {\n      key: 'indriretnbr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"idnriretnbr\",\n      style: inlinestyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Number of Indri Passages (10, ..., 10000): \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"indriRetNbr\",\n      size: \"34\",\n      label: \"something\",\n      placeholder: \"100\",\n      value: indriRetNbr,\n      onChange: this.handleChange,\n      style: inlinestyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'nodethreshold',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodethreshold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Node Weight Threshold: [0.5, ..., 1.0]\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"nodeThreshold\",\n      placeholder: \"0.75\",\n      value: nodeThreshold,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'edgethreshold',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"edgethreshold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Edge Weight Threshold: [0.0, ..., 0.1]\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"edgeThreshold\",\n      placeholder: \"0.0\",\n      value: edgeThreshold,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'convquery',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"convquery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Conversational Query Model\"), React.createElement(\"select\", {\n      id: \"convquery\",\n      name: \"convquery\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      defaultValue: \"conv_w2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"all turns proportionate weights\"), React.createElement(\"option\", {\n      value: \"conv_uw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"only current+first turns used\"), React.createElement(\"option\", {\n      value: \"conv_w1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"only current+previous+first turns used, previous turn decayed\")))), React.createElement(\"tr\", {\n      key: 'hyperparameters',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 'hyperparamters_heading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Hyperparameters for Scoring (values must sum up to 1.0)\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: \"scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodescore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"h1 (Indri score)\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"h1\",\n      placeholder: \"0.6\",\n      value: h1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodescore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"h2 (Node score)\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"h2\",\n      placeholder: \"0.3\",\n      value: h2,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodescore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"h3 (Edge score)\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"h3\",\n      placeholder: \"0.1\",\n      value: h3,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))))))));\n  }\n\n} //unweighted current+first turns\n//weighted current+previous+first turns\n//weighted all turns\n\n\nexport default Options;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Options.js"],"names":["React","Component","Options","handleChange","event","target","name","value","props","onChange","render","retNbr","indriRetNbr","nodeThreshold","edgeThreshold","h1","h2","h3","inlinestyle","display","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass Options extends Component {\n  \n  \n \n  \n  handleChange = event => {\n    const { name, value } = event.target;\n  \n    this.props.onChange(name, value);\n   \n   }   \n   \n  \n\n  \n  render() {\n  const { retNbr, indriRetNbr, nodeThreshold, edgeThreshold, h1, h2, h3 } = this.props;\n//<label display=\"inline\" htmlFor=\"retnbr\">Number of Results (1, ..., 20): </label>\nvar inlinestyle = {display: \"inline\", width: \"10%\", \"margin-right\": \"10px\"}\n\n    return (\n       \n        <table>\n            <thead>\n                <tr key={'options'}>\n                    <th>Advanced Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr  key={'retnbr'}>\n                <td colspan=\"2\">Number of Results (1, ..., 20): <input type=\"text\" name=\"retNbr\" placeholder=\"3\" value={retNbr} label=\"Number of Results (1, ..., 20):\"  onChange={this.handleChange} />\n                    </td>\n                    <td>  </td>\n                </tr>\n                <tr key={'indriretnbr'}>\n                    <td>\n                        <label htmlFor=\"idnriretnbr\" style={inlinestyle}>Number of Indri Passages (10, ..., 10000): </label>\n                        <input type=\"text\" name=\"indriRetNbr\" size=\"34\" label=\"something\" placeholder=\"100\" value={indriRetNbr} onChange={this.handleChange} style={inlinestyle}/>\n                    </td>\n\n                </tr>\n                <tr key={'nodethreshold'}>\n                    <td>\n                        <label htmlFor=\"nodethreshold\">Node Weight Threshold: [0.5, ..., 1.0]</label>\n                        <input type=\"text\" name=\"nodeThreshold\" placeholder=\"0.75\" value={nodeThreshold} onChange={this.handleChange}/>\n                    </td>\n\n                </tr>\n                <tr key={'edgethreshold'}>\n                    <td>\n                        <label htmlFor=\"edgethreshold\">Edge Weight Threshold: [0.0, ..., 0.1]</label>\n                        <input type=\"text\" name=\"edgeThreshold\" placeholder=\"0.0\" value={edgeThreshold} onChange={this.handleChange}/>\n                    </td>\n\n                </tr>\n                <tr key={'convquery'}>\n                    <td>\n                    <label htmlFor=\"convquery\">Conversational Query Model</label>\n                    <select id=\"convquery\" name=\"convquery\" onChange={this.handleChange}>\n                    <option defaultValue=\"conv_w2\">all turns proportionate weights</option>\n                        <option value=\"conv_uw\">only current+first turns used</option> \n                        <option value=\"conv_w1\">only current+previous+first turns used, previous turn decayed</option>\n                        \n                        \n                    </select>\n\n                    </td>\n\n                </tr>\n                <tr key={'hyperparameters'}>\n\n                    <td>\n                        <table>\n\n                            <thead>\n                                <tr key={'hyperparamters_heading'}>\n                                    <th colSpan=\"3\">Hyperparameters for Scoring (values must sum up to 1.0)</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr key={\"scores\"}>                             \n                               \n                                    <td>\n                                        <label htmlFor=\"nodescore\">h1 (Indri score)</label>\n                                        <input type=\"text\" name=\"h1\" placeholder=\"0.6\" value={h1} onChange={this.handleChange}/>\n                                    </td>\n                                    <td>\n                                        <label htmlFor=\"nodescore\">h2 (Node score)</label>\n                                        <input type=\"text\" name=\"h2\" placeholder=\"0.3\" value={h2} onChange={this.handleChange}/>\n                                    </td>\n                                    <td>\n                                        <label htmlFor=\"nodescore\">h3 (Edge score)</label>\n                                        <input type=\"text\" name=\"h3\" placeholder=\"0.1\" value={h3} onChange={this.handleChange}/>\n                                    </td>\n                                    \n                                </tr>\n                                \n                            </tbody>\n                        </table>\n                    </td>   \n                </tr>\n            </tbody>\n        </table>\n    );\n}\n\n\n}\n\n//unweighted current+first turns\n//weighted current+previous+first turns\n//weighted all turns\n\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}