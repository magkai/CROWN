{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport QuestionForm from './QuestionForm';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      answers: []\n    };\n\n    this.handleSubmit = question => {\n      this.setState({\n        questions: [...this.state.questions, question]\n      });\n      fetch(\"http://localhost:5000/getanswer\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          credentials: 'same-origin'\n        },\n        method: 'post',\n        body: JSON.stringify({\n          \"questions\": this.state.questions\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(\"error case:\", response);\n          throw new Error('Something went wrong ...');\n        }\n      }).then(data => this.setState({\n        answers: [...this.state.answers, data.answers]\n      })).catch(error => this.setState({\n        error\n      }));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          answers = _this$state.answers;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      questions: questions,\n      answers: answers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst TableBody = props => {\n  const rows = props.answers.map((answer, index) => {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Rank \", index, \" : \", answer));\n  });\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Result for: \", props.questions[0]))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, rows));\n};\n\nexport default App;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js"],"names":["React","Component","Table","Form","QuestionForm","App","state","questions","answers","handleSubmit","question","setState","fetch","headers","credentials","method","body","JSON","stringify","then","response","ok","json","console","log","Error","data","catch","error","render","TableBody","props","rows","map","answer","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport QuestionForm from './QuestionForm'\n\n\n\n\nclass App extends Component {\n  state = {\n    questions:  []\n      ,\n      answers: []\n      \n    };\n    \n  \n    handleSubmit = question => {\n    this.setState({ questions: [...this.state.questions,question] });\n    \n    fetch(\"http://localhost:5000/getanswer\", {\n         headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json', credentials: 'same-origin'},\n\n    method: 'post', body: JSON.stringify({\"questions\" : this.state.questions })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n            console.log(\"error case:\", response);\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => this.setState({ answers:  [...this.state.answers,data.answers ]}))\n      .catch(error => this.setState({ error }));\n    }\n\n\n\n render() {\n     const {questions, answers } = this.state;\n      return (\n        <div className=\"container\">\n        <Form handleSubmit={this.handleSubmit} /> \n         <TableBody  questions={questions} answers={answers}/>\n \n        </div>\n      );\n  }\n  \n};\n\n  \nconst TableBody = props  => {\n     const rows = props.answers.map((answer, index) => {\n         return(\n         <tr key={index}>\n                    \n                    <td>Rank {index} : {answer}</td>\n                </tr>\n                );\n     });\n     \n    \n     return (\n \n             <table>\n                <thead>\n                    <tr>\n                        <th>Result for: {props.questions[0]}</th>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n            );\n    \n  };\n  \n  \nexport default App\n"]},"metadata":{},"sourceType":"module"}