{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Form.js\";\nimport React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitForm = () => {\n      this.props.handleSubmit(this.state.question);\n      this.setState(this.initialState);\n    };\n\n    this.clearConv = () => {\n      this.props.handleClearConv();\n    };\n\n    this.initialState = {\n      question: ''\n    };\n    this.state = this.initialState;\n  }\n\n  render() {\n    const q = this.state.q;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Question\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      value: q,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \" \", React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Clear Conversation\",\n      onClick: this.clearConv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Form.js"],"names":["React","Component","Form","constructor","props","handleChange","event","target","name","value","setState","submitForm","handleSubmit","state","question","initialState","clearConv","handleClearConv","render","q"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,YAVmB,GAUJC,KAAK,IAAI;AAAA,4BACAA,KAAK,CAACC,MADN;AAAA,YAChBC,IADgB,iBAChBA,IADgB;AAAA,YACVC,KADU,iBACVA,KADU;AAGxB,WAAKC,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC;AADI,OAAd;AAID,KAjBoB;;AAAA,SAoBrBE,UApBqB,GAoBR,MAAM;AACjB,WAAKP,KAAL,CAAWQ,YAAX,CAAwB,KAAKC,KAAL,CAAWC,QAAnC;AACA,WAAKJ,QAAL,CAAc,KAAKK,YAAnB;AAED,KAxBoB;;AAAA,SA0BrBC,SA1BqB,GA0BT,MAAM;AACd,WAAKZ,KAAL,CAAWa,eAAX;AACH,KA5BoB;;AAGjB,SAAKF,YAAL,GAAoB;AAClBD,MAAAA,QAAQ,EAAE;AADQ,KAApB;AAIA,SAAKD,KAAL,GAAa,KAAKE,YAAlB;AACD;;AAsBDG,EAAAA,MAAM,GAAG;AAAA,UACDC,CADC,GACK,KAAKN,KADV,CACDM,CADC;AAGT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEA,CAHT;AAIE,MAAA,QAAQ,EAAE,KAAKd,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAE,KAAKM,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQK,GARL,EASI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,oBAA3B;AAAgD,MAAA,OAAO,EAAE,KAAKK,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADF;AAaD;;AA/C4B;;AAsD7B,eAAed,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      question: ''\n    };\n\n    this.state = this.initialState\n  }\n  \n  handleChange = event => {\n  const { name, value } = event.target\n\n  this.setState({\n    [name]: value\n\n  })\n}\n\n\nsubmitForm = () => {\n  this.props.handleSubmit(this.state.question)\n  this.setState(this.initialState)\n  \n}\n\nclearConv = () => {\n    this.props.handleClearConv()\n}\n  \n  render() {\n  const { q } = this.state;\n\n  return (\n    <form>\n      <label>Question</label>\n      <input\n        type=\"text\"\n        name=\"question\"\n        value={q}\n        onChange={this.handleChange} />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n        {\" \"}\n        <input type=\"button\" value=\"Clear Conversation\" onClick={this.clearConv} />\n    </form>\n  );\n}\n\n\n}\n\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}