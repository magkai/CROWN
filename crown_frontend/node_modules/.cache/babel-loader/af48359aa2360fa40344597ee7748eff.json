{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Options.js\";\nimport React, { Component } from 'react';\n\nclass Options extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = (name, value) => {\n      if (name === 'retNbr') {\n        if (value > 20) {\n          return \"Number of Results not in [1,20]\";\n        } else {\n          return \"\";\n        }\n      } // const valid = /^[0-9]{2,3}$/.test(val);\n      //  return valid ? '' : errMessage;\n\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value; // this.setState({\n      //   [name]: value\n      //});\n\n      const error = validate(name, value);\n      this.setState({\n        error\n      });\n\n      if (error === \"\") {\n        this.props.onChange(name, value);\n      } //notify(name, error === ''); \n\n    };\n\n    this.submitScoreChange = () => {// this.props.onChange(this.props)\n    };\n\n    this.initialState = {\n      err: \"\"\n    };\n    this.state = this.initialState;\n  }\n\n  render() {\n    const _this$props = this.props,\n          retNbr = _this$props.retNbr,\n          indriRetNbr = _this$props.indriRetNbr,\n          nodeThreshold = _this$props.nodeThreshold,\n          edgeThreshold = _this$props.edgeThreshold,\n          h1 = _this$props.h1,\n          h2 = _this$props.h2,\n          h3 = _this$props.h3;\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 'options',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Advanced Options\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 'retnbr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"retnbr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Number of Results: [1,20]\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"retNbr\",\n      placeholder: \"3\",\n      value: retNbr,\n      errMessage: \"Number of Results not in [1,20]\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'indriretnbr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"idnriretnbr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Number of Indri Passages: [10,1000]\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"indriRetNbr\",\n      placeholder: \"100\",\n      value: indriRetNbr,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'nodethreshold',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodethreshold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Node Threshold: [0.5,1.0]\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"nodeThreshold\",\n      placeholder: \"0.75\",\n      value: nodeThreshold,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'edgethreshold',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"edgethreshold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Edge Threshold: [0.0,1.0]\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"edgeThreshold\",\n      placeholder: \"0.0\",\n      value: edgeThreshold,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      key: 'convquery',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"convquery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Conversational Query:\"), React.createElement(\"select\", {\n      id: \"convquery\",\n      name: \"convquery\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      defaultValue: \"conv_uw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"unweighted current+first turns\"), React.createElement(\"option\", {\n      value: \"conv_w1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"weighted current+previous+first turns\"), React.createElement(\"option\", {\n      value: \"conv_w2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"weighted all turns\")))), React.createElement(\"tr\", {\n      key: 'hyperparameters',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 'hyperparamters_heading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Hyperparameters for Scoring (values must sum up to 1.0)\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: \"scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodescore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"h1 (indri score)\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"h1\",\n      placeholder: \"0.6\",\n      value: h1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodescore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"h2 (node score)\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"h2\",\n      placeholder: \"0.3\",\n      value: h2,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nodescore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"h3 (edge score)\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"h3\",\n      placeholder: \"0.1\",\n      value: h3,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Change scores\",\n      onClick: this.submitScoreChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default Options;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Options.js"],"names":["React","Component","Options","constructor","props","validate","name","value","handleChange","event","target","error","setState","onChange","submitScoreChange","initialState","err","state","render","retNbr","indriRetNbr","nodeThreshold","edgeThreshold","h1","h2","h3","submitScoreChanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass Options extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.initialState = {\n        err: \"\"\n    };\n\n    this.state = this.initialState;\n  }\n  \n  validate = (name, value) => {\n    if(name === 'retNbr') {\n        if (value > 20) {\n            return \"Number of Results not in [1,20]\";\n        } else {\n            return \"\";\n        }\n    }\n            \n   // const valid = /^[0-9]{2,3}$/.test(val);\n  //  return valid ? '' : errMessage;\n   };\n  \n  handleChange = event => {\n    const { name, value } = event.target;\n   // this.setState({\n     //   [name]: value\n    //});\n    const error = validate(name, value);\n    this.setState({\n        error\n    });\n    if(error === \"\") {\n        this.props.onChange(name, value);\n    }\n    //notify(name, error === ''); \n   \n   }   \n   \n   submitScoreChange = () =>{\n      // this.props.onChange(this.props)\n   }\n\n  \n  render() {\n  const { retNbr, indriRetNbr, nodeThreshold, edgeThreshold, h1, h2, h3 } = this.props;\n\n    return (\n        <table >\n            <thead>\n                <tr key={'options'}>\n                    <th>Advanced Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr key={'retnbr'}>\n                    <td>\n                        <label htmlFor=\"retnbr\">Number of Results: [1,20]</label>\n                        <input type=\"text\" name=\"retNbr\" placeholder=\"3\" value={retNbr} errMessage=\"Number of Results not in [1,20]\" onChange={this.handleChange}  />\n                    </td>\n                </tr>\n                <tr key={'indriretnbr'}>\n                    <td>\n                        <label htmlFor=\"idnriretnbr\">Number of Indri Passages: [10,1000]</label>\n                        <input type=\"text\" name=\"indriRetNbr\" placeholder=\"100\" value={indriRetNbr} onChange={this.handleChange}/>\n                    </td>\n\n                </tr>\n                <tr key={'nodethreshold'}>\n                    <td>\n                        <label htmlFor=\"nodethreshold\">Node Threshold: [0.5,1.0]</label>\n                        <input type=\"text\" name=\"nodeThreshold\" placeholder=\"0.75\" value={nodeThreshold} onChange={this.handleChange}/>\n                    </td>\n\n                </tr>\n                <tr key={'edgethreshold'}>\n                    <td>\n                        <label htmlFor=\"edgethreshold\">Edge Threshold: [0.0,1.0]</label>\n                        <input type=\"text\" name=\"edgeThreshold\" placeholder=\"0.0\" value={edgeThreshold} onChange={this.handleChange}/>\n                    </td>\n\n                </tr>\n                <tr key={'convquery'}>\n                    <td>\n                    <label htmlFor=\"convquery\">Conversational Query:</label>\n                    <select id=\"convquery\" name=\"convquery\" onChange={this.handleChange}>\n                        <option defaultValue=\"conv_uw\">unweighted current+first turns</option> \n                        <option value=\"conv_w1\">weighted current+previous+first turns</option>\n                        <option value=\"conv_w2\">weighted all turns</option>\n                        \n                    </select>\n\n                    </td>\n\n                </tr>\n                <tr key={'hyperparameters'}>\n\n                    <td>\n                        <table>\n\n                            <thead>\n                                <tr key={'hyperparamters_heading'}>\n                                    <th colSpan=\"3\">Hyperparameters for Scoring (values must sum up to 1.0)</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr key={\"scores\"}>\n                                <form >\n                                \n                                <input/>\n                                    <td>\n                                        <label htmlFor=\"nodescore\">h1 (indri score)</label>\n                                        <input type=\"text\" name=\"h1\" placeholder=\"0.6\" value={h1} onChange={this.handleChange}/>\n                                    </td>\n                                    <td>\n                                        <label htmlFor=\"nodescore\">h2 (node score)</label>\n                                        <input type=\"text\" name=\"h2\" placeholder=\"0.3\" value={h2} onChange={this.handleChange}/>\n                                    </td>\n                                    <td>\n                                        <label htmlFor=\"nodescore\">h3 (edge score)</label>\n                                        <input type=\"text\" name=\"h3\" placeholder=\"0.1\" value={h3} onChange={this.handleChange}/>\n                                    </td>\n                                    <td><input type=\"button\" value=\"Change scores\" onClick={this.submitScoreChanges} /></td>\n                                </form>\n                                </tr>\n                                \n                            </tbody>\n                        </table>\n                    </td>   \n                </tr>\n            </tbody>\n        </table>\n    );\n}\n\n\n}\n\n\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}