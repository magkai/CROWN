{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport QuestionForm from './QuestionForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = question => {\n      this.setState({\n        questions: [...this.state.questions, question]\n      }, () => {\n        // fetch(\"http://139.19.51.11:5000/getanswer\", {\n        fetch(\"http://localhost:5000/getanswer\", {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            credentials: 'same-origin'\n          },\n          method: 'post',\n          body: JSON.stringify({\n            \"questions\": this.state.questions\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            console.log(\"ERROR when calling REST Api, response was:\" + response); //throw new Error('ERROR when calling REST Api');\n            //   this.setState({ answers:  [...this.state.answers,\"ERROR while calling REST API\"] }, () => {\n            //  this.setState({turn: this.state.turn+1});\n            //  })\n          }\n        }).then(data => this.setState({\n          answers: [...this.state.answers, data]\n        }, () => {\n          this.setState({\n            turn: this.state.turn + 1\n          });\n        })).catch(error => this.setState({\n          error: error\n        }, () => {\n          console.log(\"ERROR when calling REST Api: \" + error); //this.setState({ answers:  [...this.state.answers,[\"ERROR while calling REST API\"]] }, () => {\n          //this.setState({turn: this.state.turn+1});\n          //})\n        }));\n      });\n    };\n\n    this.handleClearConv = () => {\n      console.log(\"in clear conv\");\n      this.setState(this.initialState);\n    };\n\n    this.initialState = {\n      questions: [],\n      answers: [],\n      turn: -1\n    };\n    this.state = this.initialState;\n  } // state = {\n  //   questions:  [],\n  //   answers: [],\n  //turn: -1\n  //};\n  // prev_questions = []\n  //prev_answers = []\n  // prev_turn = -1\n\n\n  render() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          answers = _this$state.answers;\n\n    if (this.state.questions.length > 0 && this.state.questions.length === this.state.answers.length) {\n      //if(this.state.turn !== -1) {\n      console.log(\"in if\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Form, {\n        handleSubmit: this.handleSubmit,\n        onSubmit: this.handleSubmit,\n        handleClearConv: this.handleClearConv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        questions: this.state.questions,\n        answers: this.state.answers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    } else {\n      console.log(\"in else\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Form, {\n        handleSubmit: this.handleSubmit,\n        handleClearConv: this.handleClearConv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        questions: questions.splice(0, questions.length - 1),\n        answers: this.state.answers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst TableBody = props => {\n  const questions = props.questions,\n        answers = props.answers;\n  console.log(\"in tablebody, questions: \" + questions);\n  console.log(\"in tablebody, answers: \" + answers);\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(InnerTable, {\n      question: question,\n      answers: answers[index],\n      nbr: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })));\n  })));\n};\n\nconst InnerTable = props => {\n  const question = props.question,\n        answers = props.answers,\n        nbr = props.nbr;\n  const rows = answers.map((answer, index) => {\n    return React.createElement(\"tr\", {\n      key: \"\".concat(nbr.toString()).concat(\"_\").concat(index.toString()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Rank \", index, \" : \"), answer));\n  });\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Result for: \", question))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, rows));\n};\n\nexport default App;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js"],"names":["React","Component","Table","Form","QuestionForm","App","constructor","props","handleSubmit","question","setState","questions","state","fetch","headers","credentials","method","body","JSON","stringify","then","response","ok","json","console","log","data","answers","turn","catch","error","handleClearConv","initialState","render","length","splice","TableBody","map","index","InnerTable","nbr","rows","answer","concat","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport QuestionForm from './QuestionForm'\n \n\n\n\n\nclass App extends Component {\n  \n constructor(props) {\n    super(props);\n\n    this.initialState = {\n        questions:  [],\n        answers: [],\n        turn: -1\n    };\n\n    this.state = this.initialState;\n  }\n   // state = {\n     //   questions:  [],\n       //   answers: [],\n          //turn: -1\n        //};\n        \n    // prev_questions = []\n     //prev_answers = []\n    // prev_turn = -1\n        \n    \n    \n    handleSubmit = question => { \n     \n        this.setState({ questions: [...this.state.questions,question] }, () => {\n\n           // fetch(\"http://139.19.51.11:5000/getanswer\", {\n           fetch(\"http://localhost:5000/getanswer\", {\n                 headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json', credentials: 'same-origin'},\n\n            method: 'post', body: JSON.stringify({\"questions\" : this.state.questions })\n              }).then(response => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                    console.log(\"ERROR when calling REST Api, response was:\" + response);\n                  //throw new Error('ERROR when calling REST Api');\n               //   this.setState({ answers:  [...this.state.answers,\"ERROR while calling REST API\"] }, () => {\n                  //  this.setState({turn: this.state.turn+1});\n                  \n                  //  })\n                }\n              })\n              .then(data =>this.setState({ answers:  [...this.state.answers,data] }, () => {\n                  this.setState({turn: this.state.turn+1});\n                  \n              }))\n              .catch(error => this.setState({error: error }, () => {\n                  console.log(\"ERROR when calling REST Api: \" + error);\n                  //this.setState({ answers:  [...this.state.answers,[\"ERROR while calling REST API\"]] }, () => {\n                    //this.setState({turn: this.state.turn+1});\n                  \n                    //})\n              }));\n\n\n        });\n    \n    }\n \n    \n    handleClearConv = () => {\n        console.log(\"in clear conv\")\n        this.setState(this.initialState)\n    }\n\n\n\n    render() {\n      \n      const {questions, answers} = this.state;\n\n       if(this.state.questions.length > 0 && this.state.questions.length === this.state.answers.length ) {\n        //if(this.state.turn !== -1) {\n         console.log(\"in if\")\n           return (\n            <div className=\"container\">\n            <Form handleSubmit={this.handleSubmit} onSubmit={this.handleSubmit} handleClearConv={this.handleClearConv} />      \n            <TableBody questions={this.state.questions} answers={this.state.answers}/>\n            </div>\n          ); \n       }else {\n           console.log(\"in else\")\n           return (\n            <div className=\"container\">\n            <Form handleSubmit={this.handleSubmit} handleClearConv={this.handleClearConv}  /> \n            <TableBody questions={questions.splice(0, questions.length-1)} answers={this.state.answers}/>\n            </div>\n          ); \n       }\n       \n       \n      \n    };\n}\n\n\n  \nconst TableBody = props  => {\n    \n   const {questions, answers} = props;\n  \n   console.log(\"in tablebody, questions: \" + questions)\n   console.log(\"in tablebody, answers: \" + answers)\n       \n   \n    return (\n        <table> \n            <tbody>\n             {questions.map((question, index) => {\n                 return (\n                    <tr key={index}>\n                        <td>\n                        <InnerTable question={question} answers={answers[index]} nbr={index}/>\n                        </td>\n                    </tr>\n                     \n                 )})\n            }\n            </tbody>\n        </table>\n    );\n  \n   \n}; \n\n\nconst InnerTable = props => {\n    \n    const {question, answers, nbr} = props\n\n    const rows = answers.map((answer, index) => {\n        return(\n            <tr key={\"\".concat(nbr.toString()).concat(\"_\").concat(index.toString())}>\n                <td><b>Rank {index} : </b>{answer}</td>\n            </tr>\n          \n            \n         );\n    });\n\n    return (\n        <table>\n           <thead>\n                <tr key={question}>\n                    <th>Result for: {question}</th>\n                </tr>\n           </thead>\n           <tbody>{rows}</tbody>\n        </table>\n    )\n       \n};\nexport default App\n"]},"metadata":{},"sourceType":"module"}