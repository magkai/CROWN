{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport QuestionForm from './QuestionForm';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      answers: []\n    };\n\n    this.handleSubmit = question => {\n      this.setState({\n        questions: [...this.state.questions, question]\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('localhost:5000/getanswers', {\n      method: 'post',\n      body: JSON.stringify({\n        \"questions\": this.state.questions\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong ...');\n      }\n    }).then(data => this.setState({\n      answers: data.answers\n    })).catch(error => this.setState({\n      error\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst TableBody = () => {\n  const _this$state = this.state,\n        questions = _this$state.questions,\n        answers = _this$state.answers;\n  return answers.map((answer, index) => React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Question\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Answer\"))), React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, questions[0]), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, answer))));\n};\n\nexport default App;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js"],"names":["React","Component","Table","Form","QuestionForm","App","state","questions","answers","handleSubmit","question","setState","componentDidMount","fetch","method","body","JSON","stringify","then","response","ok","json","Error","data","catch","error","render","TableBody","map","answer","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAKA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE,EADL;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADkB;;AAAA,SASxBC,YATwB,GASTC,QAAQ,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,SAAf,EAA0BG,QAA1B;AAAb,OAAd;AACC,KAXuB;AAAA;;AAa5BE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AACnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,qBAAc,KAAKX,KAAL,CAAWC;AAA1B,OAAf;AADa,KAA9B,CAAL,CAEKW,IAFL,CAEUC,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,OAFD,MAEO;AACL,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,KARH,EASGJ,IATH,CASQK,IAAI,IAAI,KAAKZ,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEe,IAAI,CAACf;AAAhB,KAAd,CAThB,EAUGgB,KAVH,CAUSC,KAAK,IAAI,KAAKd,QAAL,CAAc;AAAEc,MAAAA;AAAF,KAAd,CAVlB;AAWD;;AAGFC,EAAAA,MAAM,GAAG;AAEJ,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAKjB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADF;AAOH;;AArCyB;;AA0C5B,MAAMkB,SAAS,GAAG,MAAO;AAAA,sBACY,KAAKrB,KADjB;AAAA,QACXC,SADW,eACXA,SADW;AAAA,QACAC,OADA,eACAA,OADA;AAGpB,SACQA,OAAO,CAACoB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADH,EAOI;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKvB,SAAS,CAAC,CAAD,CAAd,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKsB,MAAL,CAFH,CAPJ,CADA,CADR;AAeF,CAlBH;;AAqBA,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport QuestionForm from './QuestionForm'\n\n\n\n\nclass App extends Component {\n  state = {\n    questions: [\n      ],\n      answers: []\n  \n    }\n    \n  \n    handleSubmit = question => {\n    this.setState({ questions: [...this.state.questions, question] })\n    }\n\ncomponentDidMount() {\n    fetch('localhost:5000/getanswers', {\n    method: 'post', body: JSON.stringify({\"questions\" : this.state.questions })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => this.setState({ answers: data.answers }))\n      .catch(error => this.setState({ error }));\n  }\n\n\n render() {\n  \n      return (\n        <div className=\"container\">\n        <Form handleSubmit={this.handleSubmit} /> \n         <TableBody/>\n \n        </div>\n      )\n  }\n  \n}\n\n  \nconst TableBody = ()  => {\n      const { questions, answers } = this.state\n    \n     return (\n             answers.map((answer, index) =>\n             <table>\n                <thead>\n                    <tr>\n                        <th>Question</th>\n                        <th>Answer</th>\n                    </tr>\n                </thead>\n                 <tr key={index}>\n                    <td>{questions[0]}</td>\n                    <td>{answer}</td>\n                </tr>\n            </table>\n          ))\n  }\n  \n  \nexport default App\n"]},"metadata":{},"sourceType":"module"}