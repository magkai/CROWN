{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Form.js\";\nimport React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      this.props.handleSubmit(this.state.question);\n      this.setState(this.initialState);\n    };\n\n    this.showInfoText = event => {};\n\n    this.clearConv = () => {\n      this.props.handleClearConv();\n    };\n\n    this.clearLastTurn = () => {\n      this.props.handleClearLastTurn();\n    };\n\n    this.initialState = {\n      question: ''\n    };\n    this.state = this.initialState;\n  }\n\n  render() {\n    //,  {display: \"inline\", width: \"48%\",  \"marginRight\": \"10px\", \"marginBottom\": \"40px\"}\n    var inlinestyle = {\n      display: \"inline\",\n      width: \"100%\",\n      \"marginRight\": \"10px\"\n    };\n    var divstyle = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    };\n    var right = {\n      marginRight: \"10px\"\n    };\n    return React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: divstyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      value: this.state.question,\n      onChange: this.handleChange,\n      placeholder: \"Please enter your question\",\n      style: right,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Answer\",\n      onClick: this.submitForm,\n      title: \"Click here to find answer to the current question (information from previous questions is taken into account)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      class: \"clearbutton\",\n      value: \"Clear All\",\n      onClick: this.clearConv,\n      title: \"Clear entire conversation to start asking about a different topic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Clear Last\",\n      onClick: this.clearLastTurn,\n      title: \"Clear results for the last turn only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/Form.js"],"names":["React","Component","Form","constructor","props","handleChange","event","target","name","value","setState","submitForm","preventDefault","handleSubmit","state","question","initialState","showInfoText","clearConv","handleClearConv","clearLastTurn","handleClearLastTurn","render","inlinestyle","display","width","divstyle","flexDirection","justifyContent","alignItems","right","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      question: ''\n    };\n\n    this.state = this.initialState\n  }\n  \n  handleChange = event => {\n  const { name, value } = event.target\n\n  this.setState({\n    [name]: value\n\n  })\n}\n\n\nsubmitForm = event => {\n  event.preventDefault()\n  this.props.handleSubmit(this.state.question)\n  this.setState(this.initialState)\n  \n}\n\n\n showInfoText = event => {\n     \n }\n\nclearConv = () => {\n    this.props.handleClearConv()\n}\n\nclearLastTurn = () => {\n    this.props.handleClearLastTurn()\n}\n  \nrender() {\n    //,  {display: \"inline\", width: \"48%\",  \"marginRight\": \"10px\", \"marginBottom\": \"40px\"}\n\n  var inlinestyle = {display: \"inline\", width: \"100%\",  \"marginRight\": \"10px\"}\n  var divstyle = {display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}\n  var right = {marginRight: \"10px\"}\n  \n  return (\n    <form onSubmit={this.submitForm} >\n     <div style={divstyle}>\n     <input\n        type=\"text\"\n        name=\"question\"\n        value={this.state.question}\n        onChange={this.handleChange}\n        placeholder=\"Please enter your question\"  style={right}/>\n        \n        <input type=\"button\" value=\"Answer\" onClick={this.submitForm} title=\"Click here to find answer to the current question (information from previous questions is taken into account)\"  />\n      \n     </div>\n       <br />\n        <input type=\"button\" class=\"clearbutton\" value=\"Clear All\"  onClick={this.clearConv} title=\"Clear entire conversation to start asking about a different topic\" />     \n        \n        <input type=\"button\" value=\"Clear Last\"  onClick={this.clearLastTurn} title=\"Clear results for the last turn only\" />  \n   \n    </form>\n  \n    );\n}\n \n}\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}