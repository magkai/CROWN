{"ast":null,"code":"var _jsxFileName = \"/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport QuestionForm from './QuestionForm';\nimport './index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = question => {\n      //this.setState({ questions: [...this.state.questions,question] }, () => {\n      if (question !== null) {\n        fetch(\"http://139.19.51.11:5000/getanswer\", {\n          // fetch(\"http://localhost:5000/getanswer\", {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            credentials: 'same-origin'\n          },\n          method: 'post',\n          body: JSON.stringify({\n            \"questions\": [...this.state.questions, question]\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            console.log(\"ERROR when calling REST Api, response was:\" + response); //throw new Error('ERROR when calling REST Api');\n            //   this.setState({ answers:  [...this.state.answers,\"ERROR while calling REST API\"] }, () => {\n            //  this.setState({turn: this.state.turn+1});\n            //  })\n          }\n        }).then(data => this.setState({\n          questions: [...this.state.questions, question],\n          answers: [...this.state.answers, data],\n          turn: this.state.turn + 1 //, () => { this.setState({turn: this.state.turn+1});\n\n        })).catch(error => this.setState({\n          error: error\n        }, () => {\n          console.log(\"ERROR when calling REST Api: \" + error); //this.setState({ answers:  [...this.state.answers,[\"ERROR while calling REST API\"]] }, () => {\n          //this.setState({turn: this.state.turn+1});\n          //})\n        }));\n      } // });\n\n    };\n\n    this.handleClearConv = () => {\n      console.log(\"in clear conv\");\n      this.setState(this.initialState);\n    };\n\n    this.initialState = {\n      questions: [],\n      answers: [],\n      turn: -1\n    };\n    this.state = this.initialState;\n  } // state = {\n  //   questions:  [],\n  //   answers: [],\n  //turn: -1\n  //};\n  // prev_questions = []\n  //prev_answers = []\n  // prev_turn = -1\n\n\n  render() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          answers = _this$state.answers,\n          retnbr = _this$state.retnbr,\n          nodethreshold = _this$state.nodethreshold,\n          edgethreshold = _this$state.edgethreshold,\n          indriscore = _this$state.indriscore,\n          nodescore = _this$state.nodescore,\n          edgescore = _this$state.edgescore; //if(this.state.questions.length > 0 && this.state.questions.length === this.state.answers.length ) {\n    //if(this.state.turn !== -1) {\n\n    console.log(\"in if\");\n    return (//  <div className=\"container\">\n      //     <Form handleSubmit={this.handleSubmit} onSubmit={this.handleSubmit} handleClearConv={this.handleClearConv} />      \n      //      <TableBody questions={this.state.questions} answers={this.state.answers}/>\n      React.createElement(\"div\", {\n        className: \"flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Form, {\n        handleSubmit: this.handleSubmit,\n        onSubmit: this.handleSubmit,\n        handleClearConv: this.handleClearConv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        questions: this.state.questions,\n        answers: this.state.answers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"small-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: 'options',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Advanced Options\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: 'retnbr',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"retnbr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Number of Results: [1,...,20]\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"retnbr\",\n        placeholder: \"3\",\n        value: retnbr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        key: 'indriretnbr',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"idnriretnbr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Number of Indri Passages: [10,...,1000]\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"indriretnbr\",\n        placeholder: \"3\",\n        value: retnbr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        key: 'nodethreshold',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nodethreshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Node Threshold: [0.5,...,1.0]\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"nodethreshold\",\n        placeholder: \"0.75\",\n        value: nodethreshold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        key: 'edgethreshold',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"edgethreshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Edge Threshold: [0.0,...,1.0]\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"edgethreshold\",\n        placeholder: \"0.0\",\n        value: edgethreshold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        key: 'convquery',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"convquery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Conversational Query:\"), React.createElement(\"select\", {\n        id: \"convquery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        disabled: true,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"conv_uw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"unweighted current+first turns\"), React.createElement(\"option\", {\n        value: \"conv_w1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"weighted current+previous+first turns\"), React.createElement(\"option\", {\n        value: \"conv_w2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"weighted all turns\")))), React.createElement(\"tr\", {\n        key: 'hyperparameters',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        align: true,\n        key: 'hyperparamters_heading',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colspan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Hyperparameters for Scoring (values must sum up to 1.0)\"))), React.createElement(\"tr\", {\n        key: \"scores\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nodescore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"h1 (indriscore)\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"indriscore\",\n        placeholder: \"0.6\",\n        value: indriscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nodescore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"h2 (nodescore)\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"nodescore\",\n        placeholder: \"0.3\",\n        value: nodescore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nodescore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"h3 (edgescore)\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"edgescore\",\n        placeholder: \"0.1\",\n        value: edgescore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })))))))))))\n    ); // }else {\n    ///    console.log(\"in else\")\n    //    return (\n    //     <div className=\"container\">\n    //     <Form handleSubmit={this.handleSubmit} handleClearConv={this.handleClearConv}  /> \n    //     <TableBody questions={questions.splice(0, questions.length-1)} answers={this.state.answers}/>\n    //     </div>\n    //   ); \n    //}\n    //   return (\n    //   <div class=\"flex-row\">\n    //       <div class=\"flex-small\"></div>\n    //    <div class=\"flex-small\"></div>\n    // </div>\n    // );\n  }\n\n}\n\nconst TableBody = props => {\n  const questions = props.questions,\n        answers = props.answers;\n  console.log(\"in tablebody, questions: \" + questions);\n  console.log(\"in tablebody, answers: \" + answers);\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, [...questions].reverse().map((question, index) => {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(InnerTable, {\n      question: question,\n      answers: [...answers].reverse()[index],\n      nbr: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })));\n  })));\n};\n\nconst InnerTable = props => {\n  const question = props.question,\n        answers = props.answers,\n        nbr = props.nbr;\n  const rows = answers.map((answer, index) => {\n    return React.createElement(\"tr\", {\n      key: \"\".concat(nbr.toString()).concat(\"_\").concat(index.toString()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Rank \", index, \" : \"), answer));\n  });\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Result for: \", question))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, rows));\n};\n\nexport default App;","map":{"version":3,"sources":["/local/home/mkaiser/Documents/TREC_CAsT/demo/treccast-app/src/App.js"],"names":["React","Component","Table","Form","QuestionForm","App","constructor","props","handleSubmit","question","fetch","headers","credentials","method","body","JSON","stringify","state","questions","then","response","ok","json","console","log","data","setState","answers","turn","catch","error","handleClearConv","initialState","render","retnbr","nodethreshold","edgethreshold","indriscore","nodescore","edgescore","TableBody","reverse","map","index","InnerTable","nbr","rows","answer","concat","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport QuestionForm from './QuestionForm'\nimport './index.css'\n \n\n\n\n\nclass App extends Component {\n  \n constructor(props) {\n    super(props);\n\n    this.initialState = {\n        questions:  [],\n        answers: [],\n        turn: -1\n    };\n\n    this.state = this.initialState;\n  }\n   // state = {\n     //   questions:  [],\n       //   answers: [],\n          //turn: -1\n        //};\n        \n    // prev_questions = []\n     //prev_answers = []\n    // prev_turn = -1\n        \n    \n    \n    handleSubmit = question => { \n     \n        //this.setState({ questions: [...this.state.questions,question] }, () => {\n        if (question !== null) {\n            fetch(\"http://139.19.51.11:5000/getanswer\", {\n          // fetch(\"http://localhost:5000/getanswer\", {\n                 headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json', credentials: 'same-origin'},\n\n            method: 'post', body: JSON.stringify({\"questions\" : [...this.state.questions,question] })\n              }).then(response => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                    console.log(\"ERROR when calling REST Api, response was:\" + response);\n                  //throw new Error('ERROR when calling REST Api');\n               //   this.setState({ answers:  [...this.state.answers,\"ERROR while calling REST API\"] }, () => {\n                  //  this.setState({turn: this.state.turn+1});\n                  \n                  //  })\n                }\n              })\n              .then(data =>this.setState({questions: [...this.state.questions, question],\n                   answers:  [...this.state.answers,data], turn: this.state.turn+1 }\n               //, () => { this.setState({turn: this.state.turn+1});\n                  \n              ))\n              .catch(error => this.setState({error: error }, () => {\n                  console.log(\"ERROR when calling REST Api: \" + error);\n                  //this.setState({ answers:  [...this.state.answers,[\"ERROR while calling REST API\"]] }, () => {\n                    //this.setState({turn: this.state.turn+1});\n                  \n                    //})\n              }));\n          }\n\n       // });\n    \n    }\n \n    \n    handleClearConv = () => {\n        console.log(\"in clear conv\")\n        this.setState(this.initialState)\n    }\n\n\n\n    render() {\n      \n      const {questions, answers, retnbr, nodethreshold, edgethreshold, indriscore, nodescore, edgescore} = this.state;\n\n       //if(this.state.questions.length > 0 && this.state.questions.length === this.state.answers.length ) {\n        //if(this.state.turn !== -1) {\n         console.log(\"in if\")\n           return (\n                   \n          //  <div className=\"container\">\n           //     <Form handleSubmit={this.handleSubmit} onSubmit={this.handleSubmit} handleClearConv={this.handleClearConv} />      \n          //      <TableBody questions={this.state.questions} answers={this.state.answers}/>\n            <div className=\"flex-row\">\n                <div className=\"flex-large\">\n                    <Form handleSubmit={this.handleSubmit} onSubmit={this.handleSubmit} handleClearConv={this.handleClearConv} />      \n                    <TableBody questions={this.state.questions} answers={this.state.answers}/>\n\n                 </div>\n                 <div class=\"small-container\">\n                <div className=\"flex-small\">\n                <table >\n                    <thead>\n                        <tr key={'options'}>\n                            <th>Advanced Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr key={'retnbr'}>\n                            <td>\n                                <label for=\"retnbr\">Number of Results: [1,...,20]</label>\n                                <input type=\"text\" name=\"retnbr\" placeholder=\"3\" value={retnbr}/>\n                            </td>\n                        </tr>\n                        <tr key={'indriretnbr'}>\n                            <td>\n                                <label for=\"idnriretnbr\">Number of Indri Passages: [10,...,1000]</label>\n                                <input type=\"text\" name=\"indriretnbr\" placeholder=\"3\" value={retnbr}/>\n                            </td>\n                            \n                        </tr>\n                        <tr key={'nodethreshold'}>\n                            <td>\n                                <label for=\"nodethreshold\">Node Threshold: [0.5,...,1.0]</label>\n                                <input type=\"text\" name=\"nodethreshold\" placeholder=\"0.75\" value={nodethreshold}/>\n                            </td>\n                            \n                        </tr>\n                        <tr key={'edgethreshold'}>\n                            <td>\n                                <label for=\"edgethreshold\">Edge Threshold: [0.0,...,1.0]</label>\n                                <input type=\"text\" name=\"edgethreshold\" placeholder=\"0.0\" value={edgethreshold}/>\n                            </td>\n                            \n                        </tr>\n                        <tr key={'convquery'}>\n                            <td>\n                            <label for=\"convquery\">Conversational Query:</label>\n                            <select id=\"convquery\">\n                                <option disabled selected>Please select</option>\n                                <option value=\"conv_uw\">unweighted current+first turns</option>\n                                <option value=\"conv_w1\">weighted current+previous+first turns</option>\n                                <option value=\"conv_w2\">weighted all turns</option>\n                            </select>\n                           \n                            </td>\n                            \n                        </tr>\n                        <tr key={'hyperparameters'}>\n                            \n                            <td>\n                                <table>\n                                \n                                    <thead>\n                                        <tr align key={'hyperparamters_heading'}>\n                                            <th colspan=\"3\">Hyperparameters for Scoring (values must sum up to 1.0)</th>\n                                        </tr>\n                                    </thead>\n                                    <tr key={\"scores\"}>\n                                        <td>\n                                            <label for=\"nodescore\">h1 (indriscore)</label>\n                                            <input type=\"text\" name=\"indriscore\" placeholder=\"0.6\" value={indriscore}/>\n                                        </td>\n                                        <td>\n                                            <label for=\"nodescore\">h2 (nodescore)</label>\n                                            <input type=\"text\" name=\"nodescore\" placeholder=\"0.3\" value={nodescore}/>\n                                        </td>\n                                        <td>\n                                            <label for=\"nodescore\">h3 (edgescore)</label>\n                                            <input type=\"text\" name=\"edgescore\" placeholder=\"0.1\" value={edgescore}/>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </td>   \n                        </tr>\n                    </tbody>\n                </table>\n                \n              \n                </div>\n                </div>\n            </div>\n       \n          \n          ); \n      // }else {\n       ///    console.log(\"in else\")\n       //    return (\n       //     <div className=\"container\">\n       //     <Form handleSubmit={this.handleSubmit} handleClearConv={this.handleClearConv}  /> \n       //     <TableBody questions={questions.splice(0, questions.length-1)} answers={this.state.answers}/>\n       //     </div>\n       //   ); \n       //}\n    //   return (\n    //   <div class=\"flex-row\">\n    //       <div class=\"flex-small\"></div>\n        //    <div class=\"flex-small\"></div>\n       // </div>\n        \n     // );\n    };\n}\n\n\n  \nconst TableBody = props  => {\n    \n   const {questions, answers} = props;\n  \n   console.log(\"in tablebody, questions: \" + questions)\n   console.log(\"in tablebody, answers: \" + answers)\n       \n   \n    return (\n        <table> \n            <tbody>\n             {[...questions].reverse().map((question, index) => {\n                 return (\n                    <tr key={index}>\n                        <td>\n                        <InnerTable question={question} answers={[...answers].reverse()[index]} nbr={index}/>\n                        </td>\n                    </tr>\n                     \n                 )})\n            }\n            </tbody>\n        </table>\n    );\n  \n   \n}; \n\n\nconst InnerTable = props => {\n    \n    const {question, answers, nbr} = props\n\n    const rows = answers.map((answer, index) => {\n        return(\n            <tr key={\"\".concat(nbr.toString()).concat(\"_\").concat(index.toString())}>\n                <td><b>Rank {index} : </b>{answer}</td>\n            </tr>\n          \n            \n         );\n    });\n\n    return (\n        <table>\n           <thead>\n                <tr key={question}>\n                    <th>Result for: {question}</th>\n                </tr>\n           </thead>\n           <tbody>{rows}</tbody>\n        </table>\n    )\n       \n};\nexport default App\n"]},"metadata":{},"sourceType":"module"}